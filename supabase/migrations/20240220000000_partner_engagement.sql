-- === CORE TABLES ===

-- Inbound partner leads (Typeform/Notion form submissions)
create table if not exists partner_leads (
  id bigint generated by default as identity primary key,
  created_at timestamptz default now(),
  org_name text,
  contact_name text,
  contact_email text,
  platform text,           -- Notion / Asana / ClickUp / Linear / Microsoft / Other
  role text,               -- VP Product, PM, Partnerships, Solutions Architect, etc.
  company_size text,       -- 1-10, 11-50, 51-200, 200+
  message text,            -- free text from form
  source text,             -- 'typeform' | 'notion' | 'manual'
  utm_campaign text,
  utm_medium text,
  utm_source text
);

-- Outbound outreach you send (for follow-up & accountability)
create table if not exists partner_outreach (
  id bigint generated by default as identity primary key,
  created_at timestamptz default now(),
  platform text,           -- target platform
  contact_email text,
  status text,             -- Draft | Sent | Replied | Won | Lost
  sent_at timestamptz,
  last_response_at timestamptz,
  notes text
);

-- Parsed/clustered replies â†’ feeds your Liminal clustering pass
create table if not exists partner_responses (
  id bigint generated by default as identity primary key,
  created_at timestamptz default now(),
  platform text,
  contact_email text,
  sentiment text,          -- positive | neutral | negative | unknown
  key_terms jsonb,         -- ["API","Marketplace","White-label"]
  raw_text text,
  thread_ref text          -- email msg-id or helpdesk ticket id
);

-- === RLS (open for prototypes; harden later) ===
alter table partner_leads enable row level security;
alter table partner_outreach enable row level security;
alter table partner_responses enable row level security;

create policy "public read leads" on partner_leads for select using (true);
create policy "public insert leads" on partner_leads for insert with check (true);

create policy "public read outreach" on partner_outreach for select using (true);
create policy "public insert outreach" on partner_outreach for insert with check (true);
create policy "public update outreach" on partner_outreach for update using (true);

create policy "public read responses" on partner_responses for select using (true);
create policy "public insert responses" on partner_responses for insert with check (true);

-- OPTIONAL: helpful indexes
create index if not exists idx_partner_leads_created on partner_leads(created_at);
create index if not exists idx_partner_outreach_status on partner_outreach(status);
create index if not exists idx_partner_responses_platform on partner_responses(platform);
